[{"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Main.js":"1","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Services/postServices.js":"2","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Home.js":"3","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Contact.js":"4","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Posts.js":"5","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Navi.js":"6","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/SignIn.js":"7","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Adminposts.js":"8","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/NewUser.js":"9","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/utils/stateReducer.js":"10","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/config/api.js":"11","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/BackgroundVideo.jsx":"12","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/NewImageForm.js":"13","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/NewPost.js":"14","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Post.js":"15","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/index.js":"16","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/utils/stateContext.js":"17","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Services/enquiryServices.js":"18","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Gallery.js":"19","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Services/authServices.js":"20","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Adminenquiries.js":"21","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/EnquiryForm.jsx":"22","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/About.js":"23"},{"size":3627,"mtime":1612532920762,"results":"24","hashOfConfig":"25"},{"size":1584,"mtime":1612532920763,"results":"26","hashOfConfig":"25"},{"size":446,"mtime":1612532920760,"results":"27","hashOfConfig":"25"},{"size":338,"mtime":1612532920759,"results":"28","hashOfConfig":"25"},{"size":2126,"mtime":1612596086502,"results":"29","hashOfConfig":"25"},{"size":2522,"mtime":1612574305981,"results":"30","hashOfConfig":"25"},{"size":1245,"mtime":1612532920761,"results":"31","hashOfConfig":"25"},{"size":600,"mtime":1612532920759,"results":"32","hashOfConfig":"25"},{"size":1564,"mtime":1612532920760,"results":"33","hashOfConfig":"25"},{"size":1736,"mtime":1612532920765,"results":"34","hashOfConfig":"25"},{"size":362,"mtime":1612532920762,"results":"35","hashOfConfig":"25"},{"size":1191,"mtime":1612532920758,"results":"36","hashOfConfig":"25"},{"size":899,"mtime":1612582528006,"results":"37","hashOfConfig":"25"},{"size":2243,"mtime":1612685693205,"results":"38","hashOfConfig":"25"},{"size":2594,"mtime":1612684652554,"results":"39","hashOfConfig":"25"},{"size":224,"mtime":1612532920764,"results":"40","hashOfConfig":"25"},{"size":154,"mtime":1612532920764,"results":"41","hashOfConfig":"25"},{"size":530,"mtime":1612532920763,"results":"42","hashOfConfig":"25"},{"size":370,"mtime":1612673265117,"results":"43","hashOfConfig":"25"},{"size":466,"mtime":1612532920763,"results":"44","hashOfConfig":"25"},{"size":2147,"mtime":1612676570477,"results":"45","hashOfConfig":"25"},{"size":2419,"mtime":1612686747745,"results":"46","hashOfConfig":"25"},{"size":704,"mtime":1612532920759,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"171fomn",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Main.js",["106","107","108","109","110","111"],"// import React, { Component } from \"react\";\nimport React,{useState, useReducer, useEffect} from 'react'\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport {getPosts} from './Services/postServices'\nimport {getEnquiries} from './Services/enquiryServices'\nimport stateReducer from './utils/stateReducer'\nimport {StateContext} from './utils/stateContext'\nimport Home from \"./Components/Home\";\nimport Gallery from \"./Components/Gallery\";\nimport Contact from \"./Components/Contact\";\nimport About from \"./Components/About\";\nimport Adminenquiries from \"./Components/Adminenquiries\";\nimport Adminposts from \"./Components/Adminposts\";\nimport Post from \"./Components/Post\";\nimport Posts from \"./Components/Posts\";\nimport postAPI from \"./Services/postServices\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport BackgroundVideo from \"./BackgroundVideo.jsx\";\nimport {signOut} from './Services/authServices'\nimport Navi from './Components/Navi'\nimport SignIn from './Components/SignIn'\nimport NewUser from './Components/NewUser'\nimport NewPost from './Components/NewPost'\n\n \n\nconst Main = () => {\n\tconst initialState = {\n    posts: [],\n    enquiries: [],\n\t\tloggedInUser: sessionStorage.getItem(\"user\") || null,\n\t\tauth: {token:sessionStorage.getItem(\"token\") || null}\n  }\n  \n  const [store, dispatch] = useReducer(stateReducer,initialState)\n\tuseEffect(() => {\n    getPosts()\n\t\t.then((posts) => dispatch({type: 'setPosts', data: posts}))\n\t\t.catch((error) => console.log(error))\n  },[])\n\n  useEffect(() => {\n    getEnquiries()\n\t\t.then((enquiries) => dispatch({type: 'setEnquiries', data: enquiries}))\n\t\t.catch((error) => console.log(error))\n  },[])\n\n  //wrong syntax\n  // useEffect(() => {\n  //   getEnquiries()\n\t// \t.then((enquiries) => dispatch({type: 'setEnquiries', data: enquiries}))\n\t// \t.catch((error) => console.log(error))\n  // },[])\n\n  //kinda works but doesn't actully. doesn;t show posts\n  //  useEffect(async () => {\n  //   getPosts()\n  //    const posts = await getPosts\n  //    dispatch({type: 'getPosts', data: posts})\n  //   getEnquiries()\n  //   const queries = await getEnquiries\n  //   dispatch({type: 'getEnquiries', data: queries})\n  // }, [])\n\n//   useEffect(() => {\n//     getPosts()\n//     //  .then(posts => {\n//     //     setPosts(result.posts);\n//     //  })\n//     .then((posts) => dispatch({type: 'setPosts', data: posts}))\n//      .catch(console.error)\n// }, [setPosts]);\n\n    return (\n    <HashRouter>\n        <div>\n          <StateContext.Provider value={{store,dispatch}}>\n            <BackgroundVideo />\n              <Navi/>\n                <div className=\"content\">\n                  <Route exact path=\"/\" component={Home}/>\n                  <Route path=\"/about\" component={About}/>\n                  <Route path=\"/gallery\" component={Gallery}/>\n                  <Route path=\"/contact\" component={Contact}/>\n                  <Route path=\"/adminenquiries\" component={Adminenquiries}/>\n                  <Route path=\"/adminposts\" component={Adminposts}/>\n                  <Route exact path=\"/posts\" component={Posts}/>\n                  <Route exact path='/posts/new' component={NewPost} />\n\t\t\t\t\t\t      <Route exact path='/posts/update/:id' component={NewPost} />\n                  <Route exact path=\"/post/:id\" component={Post}/>\n                  <Route path='/sign_in' component={SignIn}/>\n                  <Route path='/register' component={NewUser}/>\n                </div>\n          </StateContext.Provider>\n        </div>\n      </HashRouter>\n\n    );\n}\n\n \nexport default Main;",["112","113"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Services/postServices.js",["114"],"// This page seeds all the dummy data which will be changed to pull data from the rails api.\nimport postAPI from '../Components/config/api'\n\n// const posts = [\n//  {id: 1, name: \"Install at some place\", text: \"lots of hard work to make this\", created_at: \"2021-01-11T01:33:50.019Z\", updated_at: \"2021-01-11T01:33:50.019Z\", admin_id: 2},\n//  {id: 2, name: \"Install at znnsgf place\", text: \"lots of hard work to make this\", created_at: \"2021-01-11T01:33:50.019Z\", updated_at: \"2021-01-11T01:33:50.019Z\", admin_id: 2}\n//  ]\n\n\nfunction transformPost(post) {\n\treturn {\n\t\tauthor: \"Test\",\n        posted: post.created_at,\n        name: post.name,\n\t\ttext: post.text\n\t}\n\n}\n\nexport async function getPosts() {\n    const response = await postAPI.get('/api/posts')\n    console.log(response);\n\treturn response.data\n\t// return Promise.resolve(jokes)\n}\n\n\nexport async function getPost(id) {\n\tconst response = await postAPI.get(`/api/posts/${id}`)\n\tconsole.log(response.data)\n    return response.data\n    // old code\n\t// const post = posts.find(post => post.id == id)\n\t// return post ? transformPost(post) : null\n}\n\n\nexport async function createPost(post) {\n\tconst response = await postAPI.post('/api/posts', post)\n\tconsole.log(response)\n\treturn response.data\n\t\n}\n\nexport async function deletePost(id) {\n\tconst response = await postAPI.delete(`/api/posts/${id}`)\n\treturn response.data\n}\n\nexport async function updatePost(data) {\n\tconst response = await postAPI.put(`/api/posts/${data.id}`, {name: data.name, text: data.text, admin_id: data.admin_id})\n\tconsole.log(response)\n\treturn response.data\n}\n\n\n",["115","116"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Home.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Contact.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Posts.js",["117"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Navi.js",["118"],"import React from 'react'\nimport {useHistory, NavLink} from 'react-router-dom'\nimport {useGlobalState} from '../utils/stateContext'\nimport {signOut} from '../Services/authServices'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nexport default function Navi() {\n\tlet history = useHistory()\n\n\tconst {store,dispatch} = useGlobalState()\n\tconst {loggedInUser} = store\n\n\tfunction handleSignOut(event) {\n\t\tevent.preventDefault()\n\t\tsignOut(loggedInUser)\n\t\t.then(() => {\n\t\t\tdispatch({type: 'setLoggedInUser', data: null})\n\t\t\tdispatch({type: 'setToken', data: null})\n\t\t})\n\t}\n\n\treturn (\n\t\t\n\t\t\t<Navbar collapseOnSelect expand=\"sm\" bg=\"dark\" variant=\"dark\" fixed=\"top\" className=\"header\">\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto nav-fill w-100\">\n            <Nav.Link><NavLink exact to=\"/\" className=\"nav-link\">HOME</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/about\" className=\"nav-link\">ABOUT</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/gallery\" className=\"nav-link\">GALLERY</NavLink></Nav.Link>\n            {loggedInUser ? \n            <>\n            <Nav.Link><NavLink to=\"/adminenquiries\" className=\"nav-link\">ENQUIRIES</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/posts/new\" className=\"nav-link\">NEW POST</NavLink></Nav.Link>\n            </>\n            : \n            <Nav.Link><NavLink to=\"/contact\" className=\"nav-link\">CONTACT</NavLink></Nav.Link>\n            }\n            {loggedInUser ?\n              <>\n              <button onClick={handleSignOut}>Sign Out</button>\t\n              {/* <button onClick={() => history.push('/posts/new') }>Add Joke</button>\t */}\n              <span>{loggedInUser}</span>\n              </>\n            :\n              <>\n              {/* <button onClick={() => history.push('/register')}>Register</button> */}\n              {/* <button onClick={() => history.push('/sign_in')}>Sign In</button> */}\n              </>\n            }\n            \n            </Nav>\n            </Navbar.Collapse>\n            {/* <Nav.Link><NavLink to=\"/adminenquiries\">Admin Enquiry</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/adminposts\">Admin Posts</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/post\">A Single Post</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/posts\">Many Posts</NavLink></Nav.Link> */}\n\n\n\n          </Navbar> \n\t)\n}\n",["119","120"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/SignIn.js",[],["121","122"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Adminposts.js",[],["123","124"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/NewUser.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/utils/stateReducer.js",["125","126","127","128"],"\nexport default function reducer (state, action) {\n\tswitch(action.type) {\n\t\tcase 'setPosts':{\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: action.data\n\t\t\t}\n\t\t}\n\t\tcase 'addPost': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [action.data, ...state.posts]\n\t\t\t}\n\t\t}\n\t\tcase 'deletePost': {\n\t\t\tconst updatedPosts = state.posts.filter((post) => {\n\t\t\t\treturn post.id !== parseInt(action.data)\n\t\t\t})\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: updatedPosts\n\t\t\t}\n\t\t}\n\t\tcase 'updatePost': {\n\t\t\tconst post = state.posts.find((post) => post.id == action.data.id)\n\t\t\tconst theRest = state.posts.filter((post) => post.id != action.data.id)\n\t\t\tconst updatedPost = Object.assign(post, action.data)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [updatedPost, ...theRest]\n\t\t\t}\n\n\t\t}\n\n\t\tcase 'setEnquiries':{\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tenquiries: action.data\n\t\t\t}\n\t\t}\n\t\tcase 'addEnquiries': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tenquiries: [action.data, ...state.enquiries]\n\t\t\t}\n\t\t}\n\t\tcase 'deleteEnquiries': {\n\t\t\tconst updatedEnquiries = state.enquiries.filter((enquiries) => {\n\t\t\t\treturn enquiries.id !== parseInt(action.data)\n\t\t\t})\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: updatedEnquiries\n\t\t\t}\n\t\t}\n\t\tcase 'updateEnquiries': {\n\t\t\tconst enquiries = state.enquiries.find((enquiries) => enquiries.id == action.data.id)\n\t\t\tconst theRest = state.enquiries.filter((enquiries) => enquiries.id != action.data.id)\n\t\t\tconst updatedEnquiries = Object.assign(enquiries, action.data)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tenquiries: [updatedEnquiries, ...theRest]\n\t\t\t}\n\n\t\t}\n\n\t\tcase 'setLoggedInUser': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloggedInUser: action.data\n\t\t\t}\n\t\t}\n\t\tcase 'setToken': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauth: {\n\t\t\t\t\t...state.auth,\n\t\t\t\t\ttoken: action.data\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdefault: return state\n\t}\n}",["129","130"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/config/api.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/BackgroundVideo.jsx",["131","132"],"import React, { setState, Component } from \"react\";\n\nexport default class BackgroundVideo extends React.Component {\n    render() {\n        return (\n            <video \n            ref={ref => (this.video = ref)}\n            autoPlay\n            muted \n            loop\n            id=\"background-video\"\n            style={{\n                position: \"fixed\",\n                width: \"100%\",\n                height: \"100%\",\n                opactiy: this.state.loading ? 0 : 1,\n                transition: \"opacity, 2s ease-in-out\"\n            }}\n            >\n                <source\n                src=\"https://res.cloudinary.com/custom-led-screen-solutions/video/upload/v1612066803/CLSS/CLSS-background-2_t5b7do.mp4\"\n                type=\"video/mp4\" />\n            </video>\n        )\n    }\n\n    state = {\n        loading: true\n    }\n    \n    componentDidMount() {\n        if (this.video) {\n          this.video.addEventListener(\"loadeddata\", () => {\n            this.setState({ loading: false });\n          });\n        }\n    }\n    \n    componentWillUnmount() {\n        if (this.video) {\n            this.video.removeEventListener(\"loadeddata\", () => {\n    \n            })\n        }\n    }\n\n}","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/NewImageForm.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/NewPost.js",["133"],"import React, {useState, useEffect} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {createPost, getPost, updatePost} from '../Services/postServices'\nimport {useGlobalState} from '../utils/stateContext'\n// import NewImageForm from './NewImageForm'\n\nexport default function NewPost() {\n\tconst initialFormState = {\n\t\tadmin_id: 1,\n\t\tname: '',\n\t\ttext: ''\n\t}\n\tconst [formState,setFormState] = useState(initialFormState)\n\tlet history = useHistory()\n\tlet {id} = useParams()\n\tconst {dispatch, store} = useGlobalState()\n\tconst {posts} = store;\n\n\tuseEffect(() => {\n\t\tif(id) {\n\t\t\tgetPost(id)\n\t\t\t.then((post) => {\n\t\t\t\tconsole.log(post)\n\t\t\t\t// const category = categories.find((category) => category.name.toLowerCase() === joke.category.toLowerCase())\n\t\t\t\tsetFormState({\n\t\t\t\t\tadmin_id: 1,\n\t\t\t\t\tname: post.name,\n\t\t\t\t\ttext: post.text\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t},[id])\n\n\tfunction handleChange(event) {\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[event.target.name]: event.target.value\n\t\t})\n\t\t\n\t}\n\n\tfunction handleClick(event) {\n\t\tevent.preventDefault()\n\t\tif(id) {\n\t\t\tupdatePost( {id: id, ...formState})\n\t\t\t.then(() => {\n\t\t\t\tdispatch({type: 'updatePost', data: {id: id, ...formState}})\n\t\t\t\t// history.push(`/post/${id}`)\n\t\t\t\thistory.push('/posts')\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\t\n\t\t\tcreatePost({...formState})\n\t\t\t.then((post) => {\t\t\n\t\t\t\tdispatch({type: 'addPost', data: post})\n\t\t\t\thistory.push('/posts')\n\t\t\t})\n\t\t\t.catch((error) => console.log(error))\n\t\t}\n\t}\n\treturn (\n\t\t<div id =\"new-job-table\">\n\t\t\t{/* <label>Category:</label> */}\n\t\t\t{/* <select name='category_id' value={formState.category_id} onChange={handleChange}> */}\n\t\t\t\t{/* {categories.map((category) => <option key={category.id} value={category.id}>{category.name}</option>)}\n\t\t\t</select> */}\n\t\t\t{/* <NewImageForm value={formState.name} onChange={handleChange}/> */}\n\t\t\t<label className=\"job\">Job Name:</label>\n\t\t\t<textarea className=\"job-box\" type='text' name='name' value={formState.name} onChange={handleChange}></textarea>\n\t\t\t<label className=\"job\">Job Description:</label>\n\t\t\t<textarea className=\"job-box\" type='text' name='text' value={formState.text} onChange={handleChange}></textarea>\n\t\t\t<button className=\"button\" onClick={handleClick}>{id ? 'Update' : 'Create'}</button>\n\t\t</div>\n\t)\n}\n","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Post.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/index.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/utils/stateContext.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Services/enquiryServices.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Gallery.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Services/authServices.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Adminenquiries.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/EnquiryForm.jsx",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/About.js",[],{"ruleId":"134","severity":1,"message":"135","line":2,"column":15,"nodeType":"136","messageId":"137","endLine":2,"endColumn":23},{"ruleId":"134","severity":1,"message":"138","line":5,"column":3,"nodeType":"136","messageId":"137","endLine":5,"endColumn":10},{"ruleId":"134","severity":1,"message":"139","line":20,"column":8,"nodeType":"136","messageId":"137","endLine":20,"endColumn":15},{"ruleId":"134","severity":1,"message":"140","line":21,"column":8,"nodeType":"136","messageId":"137","endLine":21,"endColumn":14},{"ruleId":"134","severity":1,"message":"141","line":22,"column":8,"nodeType":"136","messageId":"137","endLine":22,"endColumn":11},{"ruleId":"134","severity":1,"message":"142","line":24,"column":9,"nodeType":"136","messageId":"137","endLine":24,"endColumn":16},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"134","severity":1,"message":"147","line":10,"column":10,"nodeType":"136","messageId":"137","endLine":10,"endColumn":23},{"ruleId":"143","replacedBy":"148"},{"ruleId":"145","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":47,"column":36,"nodeType":"152","messageId":"153","endLine":47,"endColumn":37},{"ruleId":"134","severity":1,"message":"154","line":9,"column":6,"nodeType":"136","messageId":"137","endLine":9,"endColumn":13},{"ruleId":"143","replacedBy":"155"},{"ruleId":"145","replacedBy":"156"},{"ruleId":"143","replacedBy":"157"},{"ruleId":"145","replacedBy":"158"},{"ruleId":"143","replacedBy":"159"},{"ruleId":"145","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":26,"column":52,"nodeType":"163","messageId":"164","endLine":26,"endColumn":54},{"ruleId":"161","severity":1,"message":"165","line":27,"column":57,"nodeType":"163","messageId":"164","endLine":27,"endColumn":59},{"ruleId":"161","severity":1,"message":"162","line":58,"column":71,"nodeType":"163","messageId":"164","endLine":58,"endColumn":73},{"ruleId":"161","severity":1,"message":"165","line":59,"column":71,"nodeType":"163","messageId":"164","endLine":59,"endColumn":73},{"ruleId":"143","replacedBy":"166"},{"ruleId":"145","replacedBy":"167"},{"ruleId":"134","severity":1,"message":"168","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"169","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"170","line":17,"column":9,"nodeType":"136","messageId":"137","endLine":17,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'postAPI' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'signOut' is defined but never used.","no-native-reassign",["171"],"no-negated-in-lhs",["172"],"'transformPost' is defined but never used.",["171"],["172"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'history' is assigned a value but never used.",["171"],["172"],["171"],["172"],["171"],["172"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["171"],["172"],"'setState' is defined but never used.","'Component' is defined but never used.","'posts' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]