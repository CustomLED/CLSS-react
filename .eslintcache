[{"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Main.js":"1","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Services/enquiryServices.js":"2","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/utils/stateContext.js":"3","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Home.js":"4","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Post.js":"5","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/BackgroundVideo.jsx":"6","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/config/api.js":"7","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/index.js":"8","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/NewPost.js":"9","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Services/postServices.js":"10","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Posts.js":"11","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/utils/stateReducer.js":"12"},{"size":4051,"mtime":1612781735900,"results":"13","hashOfConfig":"14"},{"size":1069,"mtime":1612762377975,"results":"15","hashOfConfig":"14"},{"size":154,"mtime":1612532920764,"results":"16","hashOfConfig":"14"},{"size":446,"mtime":1612532920760,"results":"17","hashOfConfig":"14"},{"size":1245,"mtime":1612851915309,"results":"18","hashOfConfig":"14"},{"size":1191,"mtime":1612532920758,"results":"19","hashOfConfig":"14"},{"size":364,"mtime":1612831952431,"results":"20","hashOfConfig":"14"},{"size":224,"mtime":1612532920764,"results":"21","hashOfConfig":"14"},{"size":2241,"mtime":1612859950613,"results":"22","hashOfConfig":"14"},{"size":966,"mtime":1612860250840,"results":"23","hashOfConfig":"14"},{"size":1110,"mtime":1612850311460,"results":"24","hashOfConfig":"14"},{"size":1974,"mtime":1612850514320,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"171fomn",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Main.js",["55","56"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Services/enquiryServices.js",[],["57","58"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/utils/stateContext.js",[],["59","60"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Home.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Post.js",["61"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/BackgroundVideo.jsx",["62","63"],"import React, { setState, Component } from \"react\";\n\nexport default class BackgroundVideo extends React.Component {\n    render() {\n        return (\n            <video \n            ref={ref => (this.video = ref)}\n            autoPlay\n            muted \n            loop\n            id=\"background-video\"\n            style={{\n                position: \"fixed\",\n                width: \"100%\",\n                height: \"100%\",\n                opactiy: this.state.loading ? 0 : 1,\n                transition: \"opacity, 2s ease-in-out\"\n            }}\n            >\n                <source\n                src=\"https://res.cloudinary.com/custom-led-screen-solutions/video/upload/v1612066803/CLSS/CLSS-background-2_t5b7do.mp4\"\n                type=\"video/mp4\" />\n            </video>\n        )\n    }\n\n    state = {\n        loading: true\n    }\n    \n    componentDidMount() {\n        if (this.video) {\n          this.video.addEventListener(\"loadeddata\", () => {\n            this.setState({ loading: false });\n          });\n        }\n    }\n    \n    componentWillUnmount() {\n        if (this.video) {\n            this.video.removeEventListener(\"loadeddata\", () => {\n    \n            })\n        }\n    }\n\n}","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/config/api.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/index.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/NewPost.js",["64","65","66","67","68"],"import axios from 'axios'\nimport React, {useState, useEffect} from 'react'\nimport { useRef } from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {createPost, getPost, updatePost} from '../Services/postServices'\nimport {useGlobalState} from '../utils/stateContext'\nimport api from \"./config/api.js\"\n// import NewImageForm from './NewImageForm'\n\nconst useForceUpdate = () => useState()[1];\n\n\nexport default function NewPost() {\n\tconst initialFormState = {\n\t\tadmin_id: 1,\n\t\tname: '',\n\t\ttext: ''\n\t}\n\tconst [formState,setFormState] = useState(initialFormState)\n\tlet history = useHistory()\n\tlet {id} = useParams()\n\tconst {dispatch, store} = useGlobalState()\n\tconst {posts} = store;\n\n\tuseEffect(() => {\n\t\tif(id) {\n\t\t\tgetPost(id)\n\t\t\t.then((post) => {\n\t\t\t\tconsole.log(post)\n\t\t\t\tsetFormState({\n\t\t\t\t\tadmin_id: 1,\n\t\t\t\t\tname: post.name,\n\t\t\t\t\ttext: post.text\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t},[id])\n\n\tfunction handleChange(event) {\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[event.target.name]: event.target.value\n\t\t})\n\t\t\n\t}\n\n\tfunction handleSubmit(event) {\n\t\tevent.preventDefault()\n\t\tconst fileInput = document.querySelector(\"#file-upload\")\n\t\tconst formData = new FormData()\n\t\tformData.append('file', fileInput.files[0])\n\t\tObject.entries(formState).forEach(pair => {\n\t\t\tformData.append(`${pair[0]}`, pair[1])\n\t\t})\n\t\t\n\t\tif(id) {\n\t\t\tupdatePost( {id: id, ...formState})\n\t\t\t.then(() => {\n\t\t\t\tdispatch({type: 'updatePost', data: {id: id, ...formState}})\n\t\t\t\t// history.push(`/post/${id}`)\n\t\t\t\thistory.push('/posts')\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tcreatePost(formData)\n\t\t\t.then((post) => {\n\t\t\t\tdispatch({type: 'addPost', data: post})\n\t\t\t\thistory.push('/posts')\n\t\t\t})\n\t\t\t.catch((error) => console.log(error))\n\t\t}\n\t}\n\treturn (\n\t\t<form onSubmit={handleSubmit} id =\"new-job-table\">\n\t\t\t<label className=\"job\">Job Name:</label>\n\t\t\t<textarea className=\"job-box\" type='text' name='name' value={formState.name} onChange={handleChange}></textarea>\n\t\t\t<label className=\"job\">Job Description:</label>\n\t\t\t<textarea className=\"job-box\" type='text' name='text' value={formState.text} onChange={handleChange}></textarea>\n\t\t\t<label>Image</label>\n\t\t\t<input \n\t\t\t\ttype=\"file\"\n\t\t\t\tid=\"file-upload\"\n\t\t\t\t/>\n\t\t\t<button className=\"button\">{id ? 'Update' : 'Create'}</button>\n\t\t</form>\n\t)\n}\n","/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Services/postServices.js",[],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/Components/Posts.js",["69","70"],"/Users/jordanbradley/projects/react/clss-practice/CLSS-react/src/utils/stateReducer.js",["71","72","73","74"],"\nexport default function reducer (state, action) {\n\tswitch(action.type) {\n\t\tcase 'setPosts':{\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: action.data\n\t\t\t}\n\t\t}\n\t\tcase 'addPost': {\n\t\t\tconsole.log(\"action.data\")\n\t\t\tconsole.log(action.data)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [...state.posts, action.data]\n\t\t\t}\n\t\t}\n\t\tcase 'deletePost': {\n\t\t\tconst updatedPosts = state.posts.filter((post) => {\n\t\t\t\treturn post.id !== parseInt(action.data)\n\t\t\t})\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: updatedPosts\n\t\t\t}\n\t\t}\n\t\tcase 'updatePost': {\n\t\t\tconst post = state.posts.find((post) => post.id == action.data.id)\n\t\t\tconst theRest = state.posts.filter((post) => post.id != action.data.id)\n\t\t\tconst updatedPost = Object.assign(post, action.data)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [updatedPost, ...theRest]\n\t\t\t}\n\n\t\t}\n\t\tcase 'setEnquiries':{\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tenquiries: action.data\n\t\t\t}\n\t\t}\n\t\tcase 'addEnquiries': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tenquiries: [...state.enquiries, action.data]\n\t\t\t}\n\t\t}\n\t\tcase 'deleteEnquiry': {\n\t\t\tconsole.log(\"Data is:\")\n\t\t\tconsole.log(action.data)\n\t\t\tconsole.log(\"Individual Enquiry:\")\n\t\t\tconst updatedEnquiries = state.enquiries.filter((enquiry) => {\n\t\t\t\tconsole.log(enquiry)\n\t\t\t\treturn enquiry.id !== parseInt(action.data)\n\t\t\t})\n\t\t\tconsole.log(\"All Enquiry\")\n\t\t\tconsole.log(updatedEnquiries)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tenquiries: updatedEnquiries\n\t\t\t}\n\t\t}\n\t\tcase 'updateEnquiries': {\n\t\t\tconst enquiries = state.enquiries.find((enquiries) => enquiries.id == action.data.id)\n\t\t\tconst theRest = state.enquiries.filter((enquiries) => enquiries.id != action.data.id)\n\t\t\tconst updatedEnquiries = Object.assign(enquiries, action.data)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tenquiries: [updatedEnquiries, ...theRest]\n\t\t\t}\n\n\t\t}\n\n\t\tcase 'setLoggedInUser': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloggedInUser: action.data\n\t\t\t}\n\t\t}\n\t\tcase 'setToken': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauth: {\n\t\t\t\t\t...state.auth,\n\t\t\t\t\ttoken: action.data\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdefault: return state\n\t}\n}",{"ruleId":"75","severity":1,"message":"76","line":13,"column":8,"nodeType":"77","messageId":"78","endLine":13,"endColumn":15},{"ruleId":"75","severity":1,"message":"79","line":21,"column":8,"nodeType":"77","messageId":"78","endLine":21,"endColumn":15},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":36,"column":4,"nodeType":"88","endLine":36,"endColumn":77},{"ruleId":"75","severity":1,"message":"89","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"90","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"91","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"92","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":16},{"ruleId":"75","severity":1,"message":"93","line":7,"column":8,"nodeType":"77","messageId":"78","endLine":7,"endColumn":11},{"ruleId":"75","severity":1,"message":"94","line":10,"column":7,"nodeType":"77","messageId":"78","endLine":10,"endColumn":21},{"ruleId":"75","severity":1,"message":"95","line":23,"column":9,"nodeType":"77","messageId":"78","endLine":23,"endColumn":14},{"ruleId":"75","severity":1,"message":"96","line":3,"column":15,"nodeType":"77","messageId":"78","endLine":3,"endColumn":24},{"ruleId":"97","severity":1,"message":"98","line":23,"column":36,"nodeType":"99","messageId":"100","endLine":23,"endColumn":37},{"ruleId":"101","severity":1,"message":"102","line":28,"column":52,"nodeType":"103","messageId":"104","endLine":28,"endColumn":54},{"ruleId":"101","severity":1,"message":"105","line":29,"column":57,"nodeType":"103","messageId":"104","endLine":29,"endColumn":59},{"ruleId":"101","severity":1,"message":"102","line":65,"column":71,"nodeType":"103","messageId":"104","endLine":65,"endColumn":73},{"ruleId":"101","severity":1,"message":"105","line":66,"column":71,"nodeType":"103","messageId":"104","endLine":66,"endColumn":73},"no-unused-vars","'Contact' is defined but never used.","Identifier","unusedVar","'NewUser' is defined but never used.","no-native-reassign",["106"],"no-negated-in-lhs",["107"],["106"],["107"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setState' is defined but never used.","'Component' is defined but never used.","'axios' is defined but never used.","'useRef' is defined but never used.","'api' is defined but never used.","'useForceUpdate' is assigned a value but never used.","'posts' is assigned a value but never used.","'useParams' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]