[{"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Main.js":"1","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Services/enquiryServices.js":"2","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/About.js":"3","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Posts.js":"4","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Adminenquiries.js":"5","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/utils/stateReducer.js":"6","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/config/api.js":"7","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/BackgroundVideo.jsx":"8","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/EnquiryForm.jsx":"9","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Contact.js":"10","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/utils/stateContext.js":"11","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/index.js":"12","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Services/postServices.js":"13","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Gallery.js":"14","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Post.js":"15","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Home.js":"16"},{"size":4126,"mtime":1612339063822,"results":"17","hashOfConfig":"18"},{"size":530,"mtime":1612339063823,"results":"19","hashOfConfig":"18"},{"size":704,"mtime":1612356354814,"results":"20","hashOfConfig":"18"},{"size":1441,"mtime":1612339063821,"results":"21","hashOfConfig":"18"},{"size":2147,"mtime":1612339063819,"results":"22","hashOfConfig":"18"},{"size":1736,"mtime":1612339063824,"results":"23","hashOfConfig":"18"},{"size":125,"mtime":1612339184788,"results":"24","hashOfConfig":"18"},{"size":1191,"mtime":1612339063819,"results":"25","hashOfConfig":"18"},{"size":2395,"mtime":1612339617307,"results":"26","hashOfConfig":"18"},{"size":338,"mtime":1612351924106,"results":"27","hashOfConfig":"18"},{"size":154,"mtime":1612339063824,"results":"28","hashOfConfig":"18"},{"size":224,"mtime":1612339063824,"results":"29","hashOfConfig":"18"},{"size":1291,"mtime":1612339063823,"results":"30","hashOfConfig":"18"},{"size":641,"mtime":1612339063821,"results":"31","hashOfConfig":"18"},{"size":2377,"mtime":1612339063821,"results":"32","hashOfConfig":"18"},{"size":446,"mtime":1612355187758,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"4fscay",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Main.js",["76","77"],"// import React, { Component } from \"react\";\nimport React,{useState, useReducer, useEffect} from 'react'\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport {getPosts} from './Services/postServices'\nimport {getEnquiries} from './Services/enquiryServices'\nimport stateReducer from './utils/stateReducer'\nimport {StateContext} from './utils/stateContext'\nimport Home from \"./Components/Home\";\nimport Gallery from \"./Components/Gallery\";\nimport Contact from \"./Components/Contact\";\nimport About from \"./Components/About\";\nimport Adminenquiries from \"./Components/Adminenquiries\";\nimport Adminposts from \"./Components/Adminposts\";\nimport Post from \"./Components/Post\";\nimport Posts from \"./Components/Posts\";\nimport postAPI from \"./Services/postServices\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport BackgroundVideo from \"./BackgroundVideo.jsx\";\n \n\nconst Main = () => {\n\tconst initialState = {\n    posts: [],\n    enquiries: [],\n\t\tloggedInUser: null,\n\t\tauth: {token: null}\n  }\n  \n  const [store, dispatch] = useReducer(stateReducer,initialState)\n\tuseEffect(() => {\n    getPosts()\n\t\t.then((posts) => dispatch({type: 'setPosts', data: posts}))\n\t\t.catch((error) => console.log(error))\n  },[])\n\n  useEffect(() => {\n    getEnquiries()\n\t\t.then((enquiries) => dispatch({type: 'setEnquiries', data: enquiries}))\n\t\t.catch((error) => console.log(error))\n  },[])\n\n  //wrong syntax\n  // useEffect(() => {\n  //   getEnquiries()\n\t// \t.then((enquiries) => dispatch({type: 'setEnquiries', data: enquiries}))\n\t// \t.catch((error) => console.log(error))\n  // },[])\n\n  //kinda works but doesn't actully. doesn;t show posts\n  //  useEffect(async () => {\n  //   getPosts()\n  //    const posts = await getPosts\n  //    dispatch({type: 'getPosts', data: posts})\n  //   getEnquiries()\n  //   const queries = await getEnquiries\n  //   dispatch({type: 'getEnquiries', data: queries})\n  // }, [])\n\n//   useEffect(() => {\n//     getPosts()\n//     //  .then(posts => {\n//     //     setPosts(result.posts);\n//     //  })\n//     .then((posts) => dispatch({type: 'setPosts', data: posts}))\n//      .catch(console.error)\n// }, [setPosts]);\n\n    return (\n    <HashRouter>\n        <div>\n          <StateContext.Provider value={{store,dispatch}}>\n          <BackgroundVideo />\n          <Navbar collapseOnSelect expand=\"sm\" bg=\"dark\" variant=\"dark\" fixed=\"top\" className=\"header\">\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto nav-fill w-100\">\n            <Nav.Link><NavLink exact to=\"/\" className=\"nav-link\">HOME</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/about\" className=\"nav-link\">ABOUT</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/gallery\" className=\"nav-link\">GALLERY</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/contact\" className=\"nav-link\">CONTACT</NavLink></Nav.Link>\n            \n            </Nav>\n            </Navbar.Collapse>\n            {/* <Nav.Link><NavLink to=\"/adminenquiries\">Admin Enquiry</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/adminposts\">Admin Posts</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/post\">A Single Post</NavLink></Nav.Link>\n            <Nav.Link><NavLink to=\"/posts\">Many Posts</NavLink></Nav.Link> */}\n\n\n\n          </Navbar> \n          <div className=\"content\">\n             <Route exact path=\"/\" component={Home}/>\n             <Route path=\"/about\" component={About}/>\n             <Route path=\"/gallery\" component={Gallery}/>\n             <Route path=\"/contact\" component={Contact}/>\n             <Route path=\"/adminenquiries\" component={Adminenquiries}/>\n             <Route path=\"/adminposts\" component={Adminposts}/>\n             <Route exact path=\"/posts\" component={Posts}/>\n             <Route path=\"/post/:id\" component={Post}/>\n\n\n\n          </div>\n          </StateContext.Provider>\n         </div>\n        </HashRouter>\n\n    );\n}\n\n \nexport default Main;",["78","79"],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Services/enquiryServices.js",[],["80","81"],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/About.js",[],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Posts.js",[],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Adminenquiries.js",[],["82","83"],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/utils/stateReducer.js",["84","85","86","87"],"\nexport default function reducer (state, action) {\n\tswitch(action.type) {\n\t\tcase 'setPosts':{\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: action.data\n\t\t\t}\n\t\t}\n\t\tcase 'addPost': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [action.data, ...state.posts]\n\t\t\t}\n\t\t}\n\t\tcase 'deletePost': {\n\t\t\tconst updatedPosts = state.posts.filter((post) => {\n\t\t\t\treturn post.id !== parseInt(action.data)\n\t\t\t})\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: updatedPosts\n\t\t\t}\n\t\t}\n\t\tcase 'updatePost': {\n\t\t\tconst post = state.posts.find((post) => post.id == action.data.id)\n\t\t\tconst theRest = state.posts.filter((post) => post.id != action.data.id)\n\t\t\tconst updatedPost = Object.assign(post, action.data)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [updatedPost, ...theRest]\n\t\t\t}\n\n\t\t}\n\n\t\tcase 'setEnquiries':{\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tenquiries: action.data\n\t\t\t}\n\t\t}\n\t\tcase 'addEnquiries': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tenquiries: [action.data, ...state.enquiries]\n\t\t\t}\n\t\t}\n\t\tcase 'deleteEnquiries': {\n\t\t\tconst updatedEnquiries = state.enquiries.filter((enquiries) => {\n\t\t\t\treturn enquiries.id !== parseInt(action.data)\n\t\t\t})\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: updatedEnquiries\n\t\t\t}\n\t\t}\n\t\tcase 'updateEnquiries': {\n\t\t\tconst enquiries = state.enquiries.find((enquiries) => enquiries.id == action.data.id)\n\t\t\tconst theRest = state.enquiries.filter((enquiries) => enquiries.id != action.data.id)\n\t\t\tconst updatedEnquiries = Object.assign(enquiries, action.data)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tenquiries: [updatedEnquiries, ...theRest]\n\t\t\t}\n\n\t\t}\n\n\t\tcase 'setLoggedInUser': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloggedInUser: action.data\n\t\t\t}\n\t\t}\n\t\tcase 'setToken': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauth: {\n\t\t\t\t\t...state.auth,\n\t\t\t\t\ttoken: action.data\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdefault: return state\n\t}\n}",["88","89"],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/config/api.js",[],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/BackgroundVideo.jsx",["90","91"],"import React, { setState, Component } from \"react\";\n\nexport default class BackgroundVideo extends React.Component {\n    render() {\n        return (\n            <video \n            ref={ref => (this.video = ref)}\n            autoPlay\n            muted \n            loop\n            id=\"background-video\"\n            style={{\n                position: \"fixed\",\n                width: \"100%\",\n                height: \"100%\",\n                opactiy: this.state.loading ? 0 : 1,\n                transition: \"opacity, 2s ease-in-out\"\n            }}\n            >\n                <source\n                src=\"https://res.cloudinary.com/custom-led-screen-solutions/video/upload/v1612066803/CLSS/CLSS-background-2_t5b7do.mp4\"\n                type=\"video/mp4\" />\n            </video>\n        )\n    }\n\n    state = {\n        loading: true\n    }\n    \n    componentDidMount() {\n        if (this.video) {\n          this.video.addEventListener(\"loadeddata\", () => {\n            this.setState({ loading: false });\n          });\n        }\n    }\n    \n    componentWillUnmount() {\n        if (this.video) {\n            this.video.removeEventListener(\"loadeddata\", () => {\n    \n            })\n        }\n    }\n\n}",["92","93"],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/EnquiryForm.jsx",[],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Contact.js",[],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/utils/stateContext.js",[],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/index.js",[],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Services/postServices.js",["94"],"// This page seeds all the dummy data which will be changed to pull data from the rails api.\nimport postAPI from '../Components/config/api'\n\n// const posts = [\n//  {id: 1, name: \"Install at some place\", text: \"lots of hard work to make this\", created_at: \"2021-01-11T01:33:50.019Z\", updated_at: \"2021-01-11T01:33:50.019Z\", admin_id: 2},\n//  {id: 2, name: \"Install at znnsgf place\", text: \"lots of hard work to make this\", created_at: \"2021-01-11T01:33:50.019Z\", updated_at: \"2021-01-11T01:33:50.019Z\", admin_id: 2}\n//  ]\n\n\nfunction transformPost(post) {\n\treturn {\n\t\tauthor: \"Test\",\n        posted: post.created_at,\n        name: post.name,\n\t\ttext: post.text\n\t}\n\n}\n\nexport async function getPosts() {\n    const response = await postAPI.get('/api/posts')\n    console.log(response);\n\treturn response.data\n\t// return Promise.resolve(jokes)\n}\n\n\nexport async function getPost(id) {\n\tconst response = await postAPI.get(`/api/posts/${id}`)\n\tconsole.log(response.data)\n    return response.data\n    // old code\n\t// const post = posts.find(post => post.id == id)\n\t// return post ? transformPost(post) : null\n}\n\n\nexport async function createPost(post) {\n\treturn post\n}\n\nexport async function deletePost(id) {\n\tconsole.log(\"ran\")\n\treturn id\n}\n\nexport async function updatePost(post) {\n\treturn post\n\t\n}\n\n\n","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Gallery.js",[],"/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Post.js",["95","96"],"// // import React, { Component } from \"react\";\n\n// // // This page is to pull one post from database\n\n// // class Post extends Component {\n// //       render() {\n// //         return (\n// //           <div>\n// //             <h2>This component returns a single Post object</h2>\n// //             <p>We will either find a way or make one.</p>\n// //             <ol>\n// //               <li>In here we will pull a single post from postgresql rails api</li>\n// //             </ol>\n// //           </div>\n// //         );\n// //       }\n// //     }\n// //      \n// //     export default Post;\n\n// import React from 'react'\n// // import {Line, COLOUR1, COLOUR2} from './Styled'\n// import { Link } from \"react-router-dom\"\n// import { useContext, useState } from \"react\"\n// import {StateContext} from '../utils/stateContext'\n// import postAPI from '../Components/config/api'\n// import {useGlobalState} from '../utils/stateContext'\n\n// export default function Post({post,index}) {\n// \tif (!post) return null\n\t\n// \treturn (\n\t\t\n// \t\t\t<p>{post.body}</p>\t\n\t\t\n// \t)\n// }\n\nimport React,{ useState,useEffect} from 'react'\nimport {useParams,useHistory} from 'react-router-dom'\n// import Moment from 'react-moment'\nimport {getPost} from '../Services/postServices.js'\n// import {Button, Panel} from './Styled'\nimport {useGlobalState} from '../utils/stateContext'\nimport {deletePost} from '../Services/postServices'\n\nexport default function PostDetails() {\n\tconst [post,setPost] = useState(null)\n\tconst {id} = useParams()\n\tlet history = useHistory()\n\tconst {store,dispatch} = useGlobalState()\n\tconst {loggedInUser} = store\n\tuseEffect(() => {\n\t\tgetPost(id)\n\t\t.then((post) => setPost(post))\n\t\t.catch((error) => console.log(error))\n\t},[id])\n\t\n\n\tif (!post) return null\n\tfunction handleDelete() {\n\t\tdeletePost(id)\n\t\t.then(() => {\n\t\t\tdispatch({type: 'deletePost', data: id})\n\t\t\thistory.push('/posts')\n\t\t})\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<p>Job: {post.name}</p>\t\t\t\n\t\t\t{/* <p>Posted on: \n\t\t\t\t<Moment format='D MMM YYYY'>{post.posted}</Moment>\n\t\t\t</p>\t\t\t */}\n\t\t\t{/* <p>Category: {joke.category}</p> */}\n\t\t\t<p>{post.text}</p>\n\t\t\t{/* {loggedInUser === joke.author &&\n\t\t\t\t<Panel>\n\t\t\t\t\t<Button onClick={() => history.push(`/jokes/update/${id}`)}>Update</Button>\n\t\t\t\t\t<Button onClick={handleDelete}>Delete</Button>\n\t\t\t\t</Panel>\n\t\t\t} */}\n\t\t</div>\n\t)\n}","/Users/jordanbradley/Documents/T3A2-B/src/clss/CLSS-react/src/Components/Home.js",[],{"ruleId":"97","severity":1,"message":"98","line":2,"column":15,"nodeType":"99","messageId":"100","endLine":2,"endColumn":23},{"ruleId":"97","severity":1,"message":"101","line":20,"column":8,"nodeType":"99","messageId":"100","endLine":20,"endColumn":15},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"104","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":26,"column":52,"nodeType":"112","messageId":"113","endLine":26,"endColumn":54},{"ruleId":"110","severity":1,"message":"114","line":27,"column":57,"nodeType":"112","messageId":"113","endLine":27,"endColumn":59},{"ruleId":"110","severity":1,"message":"111","line":58,"column":71,"nodeType":"112","messageId":"113","endLine":58,"endColumn":73},{"ruleId":"110","severity":1,"message":"114","line":59,"column":71,"nodeType":"112","messageId":"113","endLine":59,"endColumn":73},{"ruleId":"102","replacedBy":"115"},{"ruleId":"104","replacedBy":"116"},{"ruleId":"97","severity":1,"message":"117","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"118","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"102","replacedBy":"119"},{"ruleId":"104","replacedBy":"120"},{"ruleId":"97","severity":1,"message":"121","line":10,"column":10,"nodeType":"99","messageId":"100","endLine":10,"endColumn":23},{"ruleId":"97","severity":1,"message":"122","line":52,"column":9,"nodeType":"99","messageId":"100","endLine":52,"endColumn":21},{"ruleId":"97","severity":1,"message":"123","line":61,"column":11,"nodeType":"99","messageId":"100","endLine":61,"endColumn":23},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'postAPI' is defined but never used.","no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],["124"],["125"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["124"],["125"],"'setState' is defined but never used.","'Component' is defined but never used.",["124"],["125"],"'transformPost' is defined but never used.","'loggedInUser' is assigned a value but never used.","'handleDelete' is defined but never used.","no-global-assign","no-unsafe-negation"]